data {
   for (j in 1:(K-1)) {
      for (i in 1:N) {
         ones[i,j] <- 1
      }
      for (k in 1:K) {
         C[j,k] <- equals(j,k) - equals(k,K)
      }   
   }
   G <- 100 * C %*% t(C)
   lower <- -1e+5
   upper <-  1e+5
}
model {	
   for (i in 1:N) {
      for (k in 1:(K-1)) {
         bounds[i,k,1] <- equals(y[i,k],K)*lower + inprod(z[i,], equals(y[i,],y[i,k] + 1))
         bounds[i,k,2] <- equals(y[i,k],1)*upper + inprod(z[i,], equals(y[i,],y[i,k] - 1))
      }
      for (k in 1:(K-1)) {
         ones[i,k] ~ dinterval(z[i,k], bounds[i,k,])
         etas[i,k] <- inprod(x[i,,k], beta)
      }
      z[i,1:(K-1)] ~ dmnorm(etas[i,], omega)
      z[i,K] ~ dnorm(0, 1e5)
   }
   for (j in 1:P) {
      beta[j] ~ dnorm(0,1e-3)
      beta.identified[j] <- beta[j]*sqrt(d)
   }
   omega ~ dwish(G, K-1)
   sigma <- inverse(omega)
   d <- pow(K/exp(logdet(sigma)), 1/K)
   sigma.identified <- sigma*d
}
